##dist: trusty
##sudo: required
#language:
#  - cpp
#compiler:
#  - gcc
#  - clang
#install:
#- if [ "$CXX" = "g++" ]; then export CXX="g++-6" CC="gcc-6"; fi
#addons:
#  apt:
#    sources:
#      - ubuntu-toolchain-r-test
#    packages:
#      - gcc-6
#      - g++-6
#      - clang
#      - cmake
#script:
#  # Link gcc-6 and g++-6 to their standard commands
#  #- sudo ln -s /usr/bin/gcc-6 /usr/local/bin/gcc
#  #- sudo ln -s /usr/bin/g++-6 /usr/local/bin/g++
#  # Export CC and CXX to tell cmake which compiler to use
#  #- export CC=/usr/bin/gcc-6
#  #- export CXX=/usr/bin/g++-6
#  # Check versions of gcc, g++ and cmake
#  #- gcc -v && g++ -v && cmake --version
#  # Run your build commands next
#  - cmake ./CMakeLists.txt
#  - make
#  - make CTEST_OUTPUT_ON_FAILURE=1 test
 

# Use new trusty images, should yield newer compilers and packages
sudo: required
dist: precise
language: cpp

matrix:
  include:
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env: COMPILER=g++-4.9
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: COMPILER=g++-5
    - compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
      env: COMPILER=clang++-3.6
    - compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
      env: COMPILER=clang++-3.7

before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -y libopencv-dev
script:
  - cmake ./CMakeLists.txt
  - make
  - make CTEST_OUTPUT_ON_FAILURE=1 test